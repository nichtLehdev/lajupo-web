name: lajupo
services:
  app:
    platform: "linux/amd64"
    container_name: jupo-web
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: "pk_live_Y2xlcmsubGFqdXBvLmRlJA"
    working_dir: /app
    image: t3-app
    networks:
      - app-network
    environment:
      - DATABASE_URL=postgresql://postgres:password@localhost:5432/www
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_live_Y2xlcmsubGFqdXBvLmRlJA
      - CLERK_SECRET_KEY=

  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
      - /mnt/onedrive:/mnt/media/onedrive
    env_file:
      - .env
    networks:
      - immich-network
    expose:
      - "2283"
    depends_on:
      - redis
      - database
      - immich-machine-learning
    restart: always
    healthcheck:
      disable: false

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    volumes:
      - model-cache:/cache
    env_file:
      - .env
    networks:
      - immich-network
    restart: always
    healthcheck:
      disable: false

  redis:
    container_name: immich_redis
    image: docker.io/valkey/valkey:8-bookworm@sha256:42cba146593a5ea9a622002c1b7cba5da7be248650cbb64ecb9c6c33d29794b1
    networks:
      - immich-network
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  database:
    container_name: immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: "--data-checksums"
    volumes:
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
    networks:
      - immich-network
    healthcheck:
      test: pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1;
    restart: always
    command: >
      postgres -c shared_preload_libraries=vectors.so 
               -c 'search_path="$$user", public, vectors' 
               -c logging_collector=on 
               -c max_wal_size=2GB 
               -c shared_buffers=512MB 
               -c wal_compression=on

  nginx:
    image: nginx:latest
    container_name: jupo-nginx
    restart: unless-stopped
    depends_on:
      - app
      - immich-server
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app-network
      - immich-network
      - Aliases

volumes:
  model-cache:

networks:
  Aliases:
    external: true
  app-network:
  immich-network:
